<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.BizClassroomMapper">
    
    <resultMap type="BizClassroom" id="BizClassroomResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="no"    column="no"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createUserId"    column="create_user_id"    />
        <result property="updateUserId"    column="update_user_id"    />
    </resultMap>

    <sql id="selectBizClassroomVo">
        select id, name, no, create_time, update_time, create_user_id, update_user_id from biz_classroom
    </sql>

    <select id="selectBizClassroomList" parameterType="BizClassroom" resultMap="BizClassroomResult">
        <include refid="selectBizClassroomVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="no != null  and no != ''"> and no = #{no}</if>
            <if test="createUserId != null  and createUserId != ''"> and create_user_id = #{createUserId}</if>
            <if test="updateUserId != null  and updateUserId != ''"> and update_user_id = #{updateUserId}</if>
        </where>
        ORDER BY create_time desc
    </select>
    
    <select id="selectBizClassroomById" parameterType="Long" resultMap="BizClassroomResult">
        <include refid="selectBizClassroomVo"/>
        where id = #{id}
    </select>

    <select id="selectBizClassroomByNo" parameterType="String" resultMap="BizClassroomResult">
        <include refid="selectBizClassroomVo"/>
        where `no` = #{no}
    </select>
        
    <insert id="insertBizClassroom" parameterType="BizClassroom" useGeneratedKeys="true" keyProperty="id">
        insert into biz_classroom
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="no != null">no,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createUserId != null">create_user_id,</if>
            <if test="updateUserId != null">update_user_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="no != null">#{no},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createUserId != null">#{createUserId},</if>
            <if test="updateUserId != null">#{updateUserId},</if>
         </trim>
    </insert>

    <update id="updateBizClassroom" parameterType="BizClassroom">
        update biz_classroom
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="no != null">no = #{no},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createUserId != null">create_user_id = #{createUserId},</if>
            <if test="updateUserId != null">update_user_id = #{updateUserId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBizClassroomById" parameterType="Long">
        delete from biz_classroom where id = #{id}
    </delete>

    <delete id="deleteBizClassroomByIds" parameterType="String">
        delete from biz_classroom where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>